export const worksList = [
  {
    id: "12",
    title: "Développement d’un tableau de bord d'analytics",
    cover: "/portfolio/images/covers/Work12Cover1.jpg",
    gallery: [
      {
        type: "Desktop",
        images: ["/portfolio/images/Work12/Desktop/Work12Profile1Desktop.jpg"],
      },
    ],
    intro:
      "Pour le compte de SportSee, une startup dédiée au coaching sportif, j'ai été chargée d'intégrer des graphiques de suivi d'activité sportive quotidienne à la page profil des utilisateurs. Au cours de la réalisation de ce projet, j'ai intégré la maquette desktop ; utilisé la bibliothèque Recharts pour développer les graphiques ; produit une documentation technique.",
    techs: [
      "Create React App",
      "React",
      "JavaScript",
      "API REST",
      "Sass",
      "Recharts",
      "GitHub Pages",
      "Méthode agile",
    ],
    search: [
      "JavaScript",
      "Create React App",
      "React Router",
      "Sass",
      "React",
      "API REST",
      "Responsive",
      "Méthode agile",
      "Recharts",
      "Postman",
      "Proptypes",
      "JsDoc",
      "NodeJS",
      "GitHub Pages",
      "Yarn",
    ],
    type: "Formation",
    member: "Seule",
    urlDemo: "https://verapandi.github.io/sportsee/user/18",
    urlGithub: "https://github.com/VeraPandi/sportsee",
  },
  {
    id: "13",
    title:
      "Utilisation et modélisation d'API pour un compte utilisateur bancaire",
    cover: "/portfolio/images/covers/Work13Cover.jpg",
    gallery: [
      {
        type: "Desktop",
        images: ["/portfolio/images/Work13/Desktop/Work13HomeDesktop.jpg"],
      },
      {
        type: "Mobile",
        images: ["/portfolio/images/Work13/Mobile/Work13HomeMobile.jpg"],
      },
    ],
    intro:
      "Pour une nouvelle banque, j'ai été chargée de créer une application bancaire responsive permettant aux clients de se connecter et de gérer leur compte et profil. Lors de cette mission, il m'a également été demandé de modéliser l'API des transactions permettant aux clients de gérer leur compte. Au cours de la réalisation du projet, j'ai intégré les maquettes de l'application ; implémenté React Redux en tant que gestionnaire d'état ; modélisé une API des transactions bancaires en suivant les directives OpenAPI.",
    techs: [
      "Create React App",
      "React",
      "JavaScript",
      "React Redux",
      "API REST",
      "MongoDB",
      "OpenAPI",
      "Sass",
      "GitHub Pages",
      "Méthode agile",
    ],
    search: [
      "Postman",
      "MongoDB",
      "NPM",
      "OpenAPI",
      "React Redux",
      "JavaScript",
      "Create React App",
      "React Router",
      "Sass",
      "React",
      "API REST",
      "Responsive",
      "NodeJS",
      "GitHub Pages",
      "Méthode agile",
    ],
    type: "Formation",
    member: "Seule",
    urlDemo: "https://verapandi.github.io/argent-bank/",
    urlGithub: "https://github.com/VeraPandi/argent-bank",
  },
  {
    id: "15",
    title: "Portfolio",
    cover: "/portfolio/images/covers/Work15Cover.jpg",
    gallery: [
      {
        type: "Desktop",
        images: ["/portfolio/images/Work15/Desktop/Work15HomeDesktop.jpg"],
      },
      {
        type: "Mobile",
        images: ["/portfolio/images/Work15/Mobile/Work15HomeMobile.jpg"],
      },
    ],
    intro:
      "Pour mon portfolio, j'ai voulu créer une application simple, qui va à l'essentiel, contenant une brève présentation et mes projets réalisés. J'ai souhaité la développer uniquement avec React, JavaScript, Sass, Jest et Cypress, sans utilisation de bibliothèques supplémentaires, car mon objectif était de continuer à développer mes connaissances en JavaScript et React, ainsi qu'à m'exercer à écrire des tests avec Cypress. Au cours de la réalisation de ce projet, j'ai créé la maquette de l'application ; intégré la maquette ; appliqué les directives liées à l'accessibilité ; testé avec Jest et Cypress les données et composants qui me semblaient à risque ; écrit les tests End-To-End de toutes les pages dans le but principal d'utiliser plus en profondeur Cypress ; audité les performances avec Lighthouse.",
    techs: [
      "Maquettage",
      "Create React App",
      "React",
      "JavaScript",
      "Jest",
      "Testing Library",
      "Cypress",
      "Sass",
      "WCAG",
      "Lighthouse",
      "GitHub Pages",
    ],
    search: [
      "Create React App",
      "React",
      "React Router",
      "JavaScript",
      "Sass",
      "Jest",
      "Testing Library",
      "Cypress",
      "NPM",
      "JsDoc",
      "Responsive",
      "Accessibilité",
      "WCAG",
      "Lighthouse",
      "Maquettage",
      "NodeJS",
      "GitHub Pages",
    ],
    type: "Side project",
    member: "Seule",
    urlDemo: "https://verapandi.github.io/portfolio/",
    urlGithub: "https://github.com/VeraPandi/portfolio",
  },
  {
    id: "16",
    title: "Puzzle Jigsaw",
    cover: "/portfolio/images/covers/Work16Cover.jpg",
    gallery: [
      {
        type: "Desktop",
        images: ["/portfolio/images/Work16/Desktop/Work16LoginDesktop.jpg"],
      },
      {
        type: "Tablet",
        images: ["/portfolio/images/Work16/Tablet/Work16LoginTablet.jpg"],
      },
    ],
    intro:
      "Puzzle Jigsaw est une application permettant de jouer à des puzzles classiques. Sur celle-ci, on peut créer son compte de jeu, choisir les puzzles à notre goût parmi plusieurs galeries d'images thématiques et sauvegarder ses parties. Jusqu'à maintenant, ce projet personnel est le plus long et le plus complexe que j'ai eu à créer. Il m'a demandé d'apprendre 6 nouveaux outils pour le réaliser ainsi que d'effectuer un gros travail de recherche, d'apprentissage, d'approfondissement, de tests et d'écriture de code. Etant donné que c'est mon premier essai sur de nombreux outils que je ne connaissais pas auparavant, j'ai conscience que le résultat demande encore des améliorations. Néanmoins, pour une première approche, je suis relativement satisfaite du résultat et d'en arriver bientôt à bout. Au cours de la réalisation de ce projet, j'ai créé la maquette de l'application ; intégré la maquette desktop et tablette avec TailwindCSS ; implémenté Zustand en tant que gestionnaire d'état et Firebase Realtime Database en tant que base de données ; utilisé la bibliothèque Headbreaker pour développer le plateau du jeu et déployé l'application avec Netlify.",
    techs: [
      "Maquettage",
      "Create React App",
      "React",
      "JavaScript",
      "TypeScript",
      "API REST",
      "Zustand",
      "Firebase Realtime Database",
      "TailwindCSS",
      "Headbreaker",
      "Netlify",
    ],
    search: [
      "Create React App",
      "React",
      "React Router",
      "JavaScript",
      "NPM",
      "Responsive",
      "Accessibilité",
      "WCAG",
      "Maquettage",
      "NodeJS",
      "Serverless functions",
      "Firebase Realtime Database",
      "Cloud Firestore",
      "TypeScript",
      "API REST",
      "Postman",
      "Zustand",
      "Firebase",
      "TailwindCSS",
      "Headbreaker",
      "Netlify",
    ],
    type: "Side project",
    member: "Seule",
    urlDemo: "https://vp-jigsaw-puzzle.netlify.app/",
    urlGithub: "https://github.com/VeraPandi/puzzle",
  },
  {
    id: "17",
    title: "E-commerce",
    cover: "/portfolio/images/covers/Work17Cover.jpg",
    gallery: [
      {
        type: "Desktop",
        images: ["/portfolio/images/Work17/Desktop/Work17HomeDesktop.jpg"],
      },
      {
        type: "Mobile",
        images: ["/portfolio/images/Work17/Mobile/Work17HomeMobile.jpg"],
      },
    ],
    intro:
      "Flowmazon est une application e-commerce simple s'inspirant d'Amazon. Elle comporte les fonctionnalités principales d'un e-commerce comme la possibilité d'ajouter un produit dans son panier lorsque l'on est connecté ou déconnecté, un système de recherche de produits, ainsi qu'un panneau d'administration permettant d'ajouter les produits aux collections. Le projet a été construit avec NextJS15 afin de suivre au mieux les dernières améliorations de NextJS. C'est également une application assez basique, sur laquelle je n'ai pas développé de filtres de produits plus personnalisés, entre autres, car j'avais pour objectif de minimiser ma charge de travail. Contrairement au travail important qui a été fait sur le puzzle, ici, je souhaitais produire vite et me concentrer principalement sur la maîtrise de NextJS et de Prisma dans un contexte de développement d'une application e-commerce. Durant la réalisation de ce projet, j'ai intégré la maquette de l'application avec TailwindCSS et DaisyUI ; utilisé MongoDB Atlas en tant que service de base de données cloud ainsi que Prisma pour interagir avec les données ; et Vercel pour un déploiement continu.",
    techs: [
      "React",
      "NextJS",
      "JavaScript",
      "TypeScript",
      "Prisma",
      "MongoDB Atlas",
      "Zod",
      "DaisyUI",
      "TailwindCSS",
      "Vercel",
      "WCAG",
    ],
    search: [
      "NextJS15",
      "NextJS13",
      "NextJS14",
      "React",
      "Prisma",
      "MongoDB Atlas",
      "Zod",
      "DaisyUI",
      "JavaScript",
      "NPM",
      "PNPM",
      "Responsive",
      "Accessibilité",
      "WCAG",
      "NodeJS",
      "TypeScript",
      "TailwindCSS",
      "Vercel",
    ],
    type: "Side project",
    member: "Seule",
    urlDemo: "https://nextjs15-ecommerce-verapandi.vercel.app/",
    urlGithub: "https://github.com/VeraPandi/nextjs15-ecommerce",
  },
];
